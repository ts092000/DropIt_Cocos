{"version":3,"sources":["file:///Users/ADMIN/Desktop/drop-it/assets/Script/AudioController.ts"],"names":["_decorator","AudioClip","AudioSource","Button","Component","Sprite","SpriteFrame","GameData","AudioType","ccclass","property","AudioController","type","tooltip","onLoad","updateSpriteAudio","start","listButton","map","button","node","on","EventType","CLICK","playAudio","Click","buttonAudio","volume","audioSource","play","stop","playOneShot","listAudioClip","spriteAudio","spriteFrame","spriteOnAudio","spriteOffAudio"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;;AACrEC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,S,iBAAAA,S;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBV,U;;iCAGjBW,e,WADZF,OAAO,CAAC,iBAAD,C,UAEHC,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAET,MADA;AAENU,QAAAA,OAAO,EAAE;AAFH,OAAD,C,UAMRH,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAEP,MADA;AAENQ,QAAAA,OAAO,EAAE;AAFH,OAAD,C,UAMRH,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAEN,WADA;AAENO,QAAAA,OAAO,EAAE;AAFH,OAAD,C,UAMRH,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAEN,WADA;AAENO,QAAAA,OAAO,EAAE;AAFH,OAAD,C,UAMRH,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAET,MADA;AAENU,QAAAA,OAAO,EAAE;AAFH,OAAD,C,UAMRH,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAEX,SADA;AAENY,QAAAA,OAAO,EAAE;AAFH,OAAD,C,UAMRH,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAEV,WADA;AAENW,QAAAA,OAAO,EAAE;AAFH,OAAD,C,2BAtCb,MACaF,eADb,SACqCP,SADrC,CAC+C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AA2CjCU,QAAAA,MAAM,GAAS;AACrB,eAAKC,iBAAL;AACH;;AAESC,QAAAA,KAAK,GAAS;AACpB,eAAKC,UAAL,CAAgBC,GAAhB,CAAqBC,MAAD,IAAYA,MAAM,CAACC,IAAP,CAAYC,EAAZ,CAAelB,MAAM,CAACmB,SAAP,CAAiBC,KAAhC,EAAuC,MAAM,KAAKC,SAAL,CAAe;AAAA;AAAA,sCAAUC,KAAzB,CAA7C,CAAhC;AACA,eAAKC,WAAL,CAAiBN,IAAjB,CAAsBC,EAAtB,CAAyBlB,MAAM,CAACmB,SAAP,CAAiBC,KAA1C,EAAiD,MAAM;AACnD;AAAA;AAAA,sCAASI,MAAT,GAAkB;AAAA;AAAA,sCAASA,MAAT,GAAkB,CAAlB,GAAsB,CAAxC;;AACA,gBAAG;AAAA;AAAA,sCAASA,MAAZ,EAAmB;AACf,mBAAKC,WAAL,CAAiBC,IAAjB;AACH,aAFD,MAEO,KAAKD,WAAL,CAAiBE,IAAjB;;AACP,iBAAKf,iBAAL;AACH,WAND;AAOH;;AAEMS,QAAAA,SAAS,CAACZ,IAAD,EAAwB;AACpC,eAAKgB,WAAL,CAAiBG,WAAjB,CAA6B,KAAKC,aAAL,CAAmBpB,IAAnB,CAA7B,EAAuD;AAAA;AAAA,oCAASe,MAAhE;AACH;;AAEOZ,QAAAA,iBAAiB,GAAS;AAC9B,eAAKkB,WAAL,CAAiBC,WAAjB,GAA+B;AAAA;AAAA,oCAASP,MAAT,GAAkB,KAAKQ,aAAvB,GAAuC,KAAKC,cAA3E;AACH;;AAhE0C,O;;;;;;;;;;;;;;;;;;;;;;;;;iBA6BZ,E;;;;;;;iBAMM,E","sourcesContent":["import { _decorator, AudioClip, AudioSource, Button, Component, Node, Sprite, SpriteFrame } from 'cc';\r\nimport { GameData } from './Utils/GameData';\r\nimport { AudioType } from './Utils/DataTypes';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('AudioController')\r\nexport class AudioController extends Component {\r\n    @property({\r\n        type: Button,\r\n        tooltip: 'Button audio'\r\n    })\r\n    private buttonAudio: Button;\r\n\r\n    @property({\r\n        type: Sprite,\r\n        tooltip: 'Sprite audio'\r\n    })\r\n    private spriteAudio: Sprite;\r\n\r\n    @property({\r\n        type: SpriteFrame,\r\n        tooltip: 'Sprite frame audio on'\r\n    })\r\n    private spriteOnAudio: SpriteFrame;\r\n\r\n    @property({\r\n        type: SpriteFrame,\r\n        tooltip: 'Sprite frame audio off'\r\n    })\r\n    private spriteOffAudio: SpriteFrame;\r\n\r\n    @property({\r\n        type: Button,\r\n        tooltip: 'List button'\r\n    })\r\n    private listButton: Button[] = [];\r\n\r\n    @property({\r\n        type: AudioClip,\r\n        tooltip: 'List audio clip'\r\n    })\r\n    private listAudioClip: AudioClip[] = [];\r\n\r\n    @property({\r\n        type: AudioSource,\r\n        tooltip: 'Audio source'\r\n    })\r\n    private audioSource: AudioSource;\r\n\r\n    protected onLoad(): void {\r\n        this.updateSpriteAudio();\r\n    }\r\n\r\n    protected start(): void {\r\n        this.listButton.map((button) => button.node.on(Button.EventType.CLICK, () => this.playAudio(AudioType.Click)));\r\n        this.buttonAudio.node.on(Button.EventType.CLICK, () => {\r\n            GameData.volume = GameData.volume ? 0 : 1;\r\n            if(GameData.volume){\r\n                this.audioSource.play();\r\n            } else this.audioSource.stop();\r\n            this.updateSpriteAudio();\r\n        })\r\n    }\r\n\r\n    public playAudio(type: AudioType): void {\r\n        this.audioSource.playOneShot(this.listAudioClip[type], GameData.volume);\r\n    }\r\n\r\n    private updateSpriteAudio(): void {\r\n        this.spriteAudio.spriteFrame = GameData.volume ? this.spriteOnAudio : this.spriteOffAudio;\r\n    }\r\n}\r\n\r\n"]}